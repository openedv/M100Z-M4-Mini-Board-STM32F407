/**
 ****************************************************************************************************
 * @file        sccb.h
 * @author      ALIENTEK
 * @brief       This file provides the driver for the ov2640
 * @license     Copyright (C) 2012-2024, ALIENTEK
 ****************************************************************************************************
 * @attention
 *
 * platform     : ALIENTEK M100-STM32F407 board
 * website      : www.alientek.com
 * forum        : www.openedv.com/forum.php
 *
 * change logs	:
 * version		data		notes
 * V1.0			20240222	the first version
 *
 ****************************************************************************************************
 */

#ifndef __SCCB_H
#define __SCCB_H

#include "main.h"


#define SCCB_SCL_GPIO_PORT          GPIOB
#define SCCB_SCL_GPIO_PIN           GPIO_PIN_10
#define SCCB_SCL_GPIO_CLK_ENABLE()  do { __HAL_RCC_GPIOB_CLK_ENABLE(); } while (0)
#define SCCB_SDA_GPIO_PORT          GPIOB
#define SCCB_SDA_GPIO_PIN           GPIO_PIN_11
#define SCCB_SDA_GPIO_CLK_ENABLE()  do { __HAL_RCC_GPIOB_CLK_ENABLE(); } while (0)


#define SCCB_SCL(x)                 do { (x) ?                                                                      \
                                        HAL_GPIO_WritePin(SCCB_SCL_GPIO_PORT, SCCB_SCL_GPIO_PIN, GPIO_PIN_SET):     \
                                        HAL_GPIO_WritePin(SCCB_SCL_GPIO_PORT, SCCB_SCL_GPIO_PIN, GPIO_PIN_RESET);   \
                                    } while (0)
#define SCCB_SDA(x)                 do { (x) ?                                                                      \
                                        HAL_GPIO_WritePin(SCCB_SDA_GPIO_PORT, SCCB_SDA_GPIO_PIN, GPIO_PIN_SET):     \
                                        HAL_GPIO_WritePin(SCCB_SDA_GPIO_PORT, SCCB_SDA_GPIO_PIN, GPIO_PIN_RESET);   \
                                    } while (0)
#define SCCB_SDA_READ               ((HAL_GPIO_ReadPin(SCCB_SDA_GPIO_PORT, SCCB_SDA_GPIO_PIN) == GPIO_PIN_RESET) ? 0 : 1)


void sccb_init(void);
void sccb_start(void);
void sccb_stop(void);
void sccb_nack(void);
uint8_t sccb_send_byte(uint8_t data);
uint8_t sccb_read_byte(void);

#endif
